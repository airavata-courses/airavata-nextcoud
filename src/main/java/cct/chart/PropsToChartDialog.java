/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package cct.chart;

import cct.modelling.StructureManager;
import cct.tools.DataSets;
import java.awt.Component;
import java.awt.Frame;
import javax.swing.JOptionPane;

/**
 *
 * @author vvv900
 */
public class PropsToChartDialog extends javax.swing.JDialog {

  private boolean okPressed = false;

  /**
   * Creates new form PropsToChartDialog
   */
  public PropsToChartDialog(Frame parent, boolean modal) {
    super(parent, modal);
    initComponents();
  }

  public PropsToChartDialog(boolean modal) {
    super(new Frame(), modal);
    initComponents();
  }

  public void setXAxisValues(Object[] possibleValues) {
    xAxisList.setListData(possibleValues);
  }

  public void setYAxisValues(Object[] possibleValues) {
    yAxisList.setListData(possibleValues);
  }

  public void setStructureManager(StructureManager structureManager) {
    dataRangePanel1.setStructureManager(structureManager);
    Object[] values = structureManager.getAllProperties();
    setXAxisValues(values);
    setYAxisValues(values);
  }

  public boolean isOkPressed() {
    return okPressed;
  }

  public Object getXAxisValue() {
    Object obj = xAxisList.getSelectedValue();
    if (obj == null && xAxisList.getModel().getSize() == 1) {
      return xAxisList.getModel().getElementAt(0);
    }
    return obj;
  }

  public Object[] getYAxisValues() {
    if (yAxisList.getSelectedValues() != null) {
      return yAxisList.getSelectedValues();
    } else if (yAxisList.getSelectedValues() == null && yAxisList.getModel().getSize() == 1) {
      return new Object[]{yAxisList.getModel().getElementAt(0)};
    }
    return null;
  }

  public void setDataRangePanelVisible(boolean enable) {
    if (enable) {
      for (Component c : getContentPane().getComponents()) {
        if (c == dataRangePanel1) {
          return;
        }
      }
      getContentPane().add(dataRangePanel1, java.awt.BorderLayout.CENTER);

    } else {
      getContentPane().remove(dataRangePanel1);
    }
    validate();
  }

  /**
   * This method is called from within the constructor to initialize the form. WARNING: Do NOT modify this code. The
   * content of this method is always regenerated by the Form Editor.
   */
  @SuppressWarnings("unchecked")
  // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
  private void initComponents() {

    jPanel1 = new javax.swing.JPanel();
    jScrollPane1 = new javax.swing.JScrollPane();
    xAxisList = new javax.swing.JList();
    jScrollPane2 = new javax.swing.JScrollPane();
    yAxisList = new javax.swing.JList();
    jPanel2 = new javax.swing.JPanel();
    okButton = new javax.swing.JButton();
    cancelButton = new javax.swing.JButton();
    dataRangePanel1 = new DataRangePanel();

    setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
    setAlwaysOnTop(true);
    setMinimumSize(new java.awt.Dimension(200, 100));
    setModal(true);

    jPanel1.setLayout(new java.awt.GridLayout(1, 2));

    jScrollPane1.setBorder(javax.swing.BorderFactory.createTitledBorder("X-Axis Data"));

    xAxisList.setModel(new javax.swing.AbstractListModel() {
      String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
      public int getSize() { return strings.length; }
      public Object getElementAt(int i) { return strings[i]; }
    });
    xAxisList.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
    xAxisList.setToolTipText("Select One Property");
    xAxisList.setPreferredSize(new java.awt.Dimension(100, 120));
    xAxisList.setSelectedIndex(0);
    xAxisList.setVisibleRowCount(10);
    jScrollPane1.setViewportView(xAxisList);
    xAxisList.getAccessibleContext().setAccessibleName("");

    jPanel1.add(jScrollPane1);

    jScrollPane2.setBorder(javax.swing.BorderFactory.createTitledBorder("Y-Axis Data"));

    yAxisList.setModel(new javax.swing.AbstractListModel() {
      String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5", "Item 6", "Item 7", "Item 8", "Item 9", "Item 10", "Item 11", "Item 12", "Item 13" };
      public int getSize() { return strings.length; }
      public Object getElementAt(int i) { return strings[i]; }
    });
    yAxisList.setToolTipText("You can select multiple items");
    yAxisList.setLayoutOrientation(javax.swing.JList.VERTICAL_WRAP);
    yAxisList.setPreferredSize(new java.awt.Dimension(100, 120));
    yAxisList.setVisibleRowCount(-1);
    jScrollPane2.setViewportView(yAxisList);

    jPanel1.add(jScrollPane2);

    getContentPane().add(jPanel1, java.awt.BorderLayout.NORTH);

    okButton.setText("OK");
    okButton.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        okButtonActionPerformed(evt);
      }
    });
    jPanel2.add(okButton);

    cancelButton.setText("Cancel");
    cancelButton.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        cancelButtonActionPerformed(evt);
      }
    });
    jPanel2.add(cancelButton);

    getContentPane().add(jPanel2, java.awt.BorderLayout.SOUTH);
    getContentPane().add(dataRangePanel1, java.awt.BorderLayout.CENTER);

    pack();
  }// </editor-fold>//GEN-END:initComponents

  private void okButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_okButtonActionPerformed
    if (xAxisList.getSelectedValue() == null && xAxisList.getModel().getSize() > 1) {
      JOptionPane.showMessageDialog(this, "Select Item to Plot for the X-Axis", "Error", JOptionPane.ERROR_MESSAGE);
      return;
    }

    if (yAxisList.getSelectedValues() == null && yAxisList.getModel().getSize() > 1) {
      JOptionPane.showMessageDialog(this, "Select Item to Plot for the Y-Axis", "Error", JOptionPane.ERROR_MESSAGE);
      return;
    }

    this.okPressed = true;
    this.setVisible(false);
  }//GEN-LAST:event_okButtonActionPerformed

  private void cancelButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelButtonActionPerformed
    this.okPressed = false;
    this.setVisible(false);
  }//GEN-LAST:event_cancelButtonActionPerformed

  /**
   * @param args the command line arguments
   */
  public static void main(String args[]) {
    /* Set the Nimbus look and feel */
    //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
     * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
     */
    try {
      for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
        if ("Nimbus".equals(info.getName())) {
          javax.swing.UIManager.setLookAndFeel(info.getClassName());
          break;
        }
      }
    } catch (ClassNotFoundException ex) {
      java.util.logging.Logger.getLogger(PropsToChartDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
    } catch (InstantiationException ex) {
      java.util.logging.Logger.getLogger(PropsToChartDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
    } catch (IllegalAccessException ex) {
      java.util.logging.Logger.getLogger(PropsToChartDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
    } catch (javax.swing.UnsupportedLookAndFeelException ex) {
      java.util.logging.Logger.getLogger(PropsToChartDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
    }
    //</editor-fold>

    /* Create and display the dialog */
    java.awt.EventQueue.invokeLater(new Runnable() {
      public void run() {
        PropsToChartDialog dialog = new PropsToChartDialog(new javax.swing.JFrame(), true);
        dialog.addWindowListener(new java.awt.event.WindowAdapter() {
          @Override
          public void windowClosing(java.awt.event.WindowEvent e) {
            System.exit(0);
          }
        });
        dialog.setVisible(true);
      }
    });
  }

  // Variables declaration - do not modify//GEN-BEGIN:variables
  private javax.swing.JButton cancelButton;
  private DataRangePanel dataRangePanel1;
  private javax.swing.JPanel jPanel1;
  private javax.swing.JPanel jPanel2;
  private javax.swing.JScrollPane jScrollPane1;
  private javax.swing.JScrollPane jScrollPane2;
  private javax.swing.JButton okButton;
  private javax.swing.JList xAxisList;
  private javax.swing.JList yAxisList;
  // End of variables declaration//GEN-END:variables
}
